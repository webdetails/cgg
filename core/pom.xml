<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>cgg-parent</artifactId>
    <groupId>org.pentaho.ctools</groupId>
    <version>8.3.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>cgg-core</artifactId>
  <version>8.3.0.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <properties>
    <js.project.list>requirejs</js.project.list>
    <webjars.target.directory>${build.dependenciesDirectory}/META-INF/resources/webjars</webjars.target.directory>

    <timestamp>${maven.build.timestamp}</timestamp>
    <maven.build.timestamp.format>yyyy/MM/dd hh\:mm</maven.build.timestamp.format>

    <pentaho-ccc-plugin.version>8.3.0.0-SNAPSHOT</pentaho-ccc-plugin.version>
    <pentaho-cpf-plugin.version>8.3.0.0-SNAPSHOT</pentaho-cpf-plugin.version>

    <commons-lang3.version>3.0.1</commons-lang3.version>
  </properties>

  <dependencies>
    <!-- default (default_internal) -->
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
    </dependency>

    <!-- default_internal (explicit) -->
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>cpf-core</artifactId>
      <version>${pentaho-cpf-plugin.version}</version>
    </dependency>

    <!-- default_external -->

    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-awt-util</artifactId>
      <version>${batik.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-dom</artifactId>
      <version>${batik.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-svggen</artifactId>
      <version>${batik.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-anim</artifactId>
      <version>${batik.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-css</artifactId>
      <version>${batik.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-codec</artifactId>
      <version>${batik.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-ext</artifactId>
      <version>${batik.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-extension</artifactId>
      <version>${batik.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-gui-util</artifactId>
      <version>${batik.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-gvt</artifactId>
      <version>${batik.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-parser</artifactId>
      <version>${batik.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-script</artifactId>
      <version>${batik.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-svg-dom</artifactId>
      <version>${batik.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-swing</artifactId>
      <version>${batik.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-transcoder</artifactId>
      <version>${batik.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-util</artifactId>
      <version>${batik.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-xml</artifactId>
      <version>${batik.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-bridge</artifactId>
      <version>${batik.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-constants</artifactId>
      <version>${batik.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-i18n</artifactId>
      <version>${batik.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>xalan</groupId>
      <artifactId>xalan</artifactId>
      <version>${xalan.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>xerces</groupId> 
      <artifactId>xercesImpl</artifactId>   
      <scope>provided</scope>   
    </dependency>

    <dependency>
      <groupId>xml-apis</groupId>
      <artifactId>xml-apis-ext</artifactId>
      <version>1.3.04</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>requirejs</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mozilla</groupId>
      <artifactId>rhino</artifactId>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>xmlunit</groupId>
      <artifactId>xmlunit</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.4</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.pentaho.ctools</groupId>
      <artifactId>ccc</artifactId>
      <version>${pentaho-ccc-plugin.version}</version>
      <type>zip</type>
      <exclusions>
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>*</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
      <version>${mail.version}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-requirejs-resource</id>
            <phase>generate-resources</phase>

            <goals>
              <goal>add-resource</goal>
            </goals>

            <configuration>
              <resources>
                <resource>
                  <directory>src/main/javascript</directory>
                  <includes>
                    <include>**/*</include>
                  </includes>
                </resource>
                <resource>
                  <directory>${webjars.target.directory}/requirejs/${requirejs.version}</directory>
                  <targetPath>pt/webdetails/cgg/resources</targetPath>
                  <includes>
                    <include>require.js</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <!-- this gets the js files from the ccc zip -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.2</version>
        <executions>
          <execution>
            <id>unpack-ccc-js</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <includeArtifactIds>ccc</includeArtifactIds>
              <outputDirectory>target/generated-sources</outputDirectory>
              <includes>ccc/amd/*.js</includes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <!-- unpack always includes dirs so need an extra copy step -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-ccc-js</id>
            <phase>process-sources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <copy todir="src/main/javascript/pt/webdetails/cgg/resources/ccc/2.0" flatten="true">
                  <fileset dir="target/generated-sources/ccc/amd">
                    <include name="def.js" />
                    <include name="pvc.js" />
                    <include name="cdo.js" />
                    <include name="protovis.js" />
                    <include name="protovis-compat.js" />
                  </fileset>
                </copy>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
